Fish_family_abund_site <- spread(data=Fish_family_abund_site, key="Family", value="Number", fill = 0)
# compute family richness per site
Fish_family_abund_site$Family_richness <- rowSums(Fish_family_abund_site[,c(2:ncol(Fish_family_abund_site))] != 0)
# Add columns Year, Site
Fish_family_abund_site <- Fish_family_abund_site %>%
left_join(., Fish[,c("Site_ID", "Year", "Site")]) %>%
distinct(Site_ID, .keep_all=T)
# Save Rdata
save(Fish_family_abund_site, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Fish_family_abund_site.rdata")
# Sum of biomass of each family per site
Fish_family_biomass_site <- Fish %>%
select(Site_ID, Family, Biomass)%>%
group_by(Site_ID, Family) %>%
summarise_all(funs(sum))
View(Fish_family_biomass_site)
# Sum of biomass of each family per site
Fish_family_biomass_site <- Fish %>%
select(Site_ID, Family, Biomass)%>%
filter(!is.na(Biomass))%>%
group_by(Site_ID, Family) %>%
summarise_all(funs(sum))
save(Fish_family_biomass_site, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Family_biomass.rdata")
# Transpose dataframe to have site in lines and families in columns
Fish_family_biomass_site <- spread(data=Fish_family_biomass_site, key="Family", value="Biomass", fill = 0)
# Add columns Year, Site
Fish_family_biomass_site <- Fish_family_biomass_site %>%
left_join(., Fish[,c("Site_ID", "Year", "Site")]) %>%
distinct(Site_ID, .keep_all=T)
# Save Rdata
save(Fish_family_biomass_site, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Fish_family_biomass_site.rdata")
Fish$Size_cm <- gsub(">", "", Fish$Size_cm )
Fish$Size_cm <- as.numeric(Fish$Size_cm)
# Compute mean fish size per family and site
Fish_family_size_sites_mean <- Fish %>%
select(Site_ID, Family, Size_cm)%>%
group_by(Site_ID, Family) %>%
summarise_all(funs(mean))
# compute SD fish size per family and site
Fish_family_size_sites_sd <- Fish %>%
select(Site_ID, Family, Size_cm)%>%
group_by(Site_ID, Family) %>%
summarise_all(funs(sd))
# assemble both
Fish_family_size_site <- cbind(Fish_family_size_sites_mean, Fish_family_size_sites_sd$Size_cm)
colnames(Fish_family_size_site) <- c("Site_ID", "Family", "Mean_size", "SD_size")
# add year and site
Fish_family_size_site <- left_join(Fish_family_size_site, Fish_family_abund_site[,c("Year", "Site", "Site_ID")])
# Save Rdata
save(Fish_family_size_site, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Fish_family_size_site.rdata")
# spread table
Fish_family_size_site_spread <- Fish_family_size_site %>%
select(Site_ID, Family, Mean_size)
Fish_family_size_site_spread <- spread(data=Fish_family_size_site_spread, key="Family", value="Mean_size", fill = 0)
# Save Rdata
save(Fish_family_size_site_spread, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Fish_family_size_site_spread.rdata")
# select important families abundance
select_abundance <- Fish_family_abund_site %>%
select(Acanthuridae, Labridae, Lutjanidae, Serranidae, Epinephelidae, Carcharhinidae, Dasyatidae, Scaridae)
select_abundance <- select_abundance[,-1]
# compute important families density
select_density <- select_abundance / 300
# select important families size
select_size <- Fish_family_size_site_spread %>%
select(Acanthuridae, Labridae, Lutjanidae, Serranidae, Epinephelidae, Carcharhinidae, Dasyatidae, Scaridae)
select_size <- select_size[,-1]
# select important families biomass
select_biomass <- Fish_family_biomass_site %>%
select(Acanthuridae, Labridae, Lutjanidae, Serranidae, Epinephelidae, Carcharhinidae, Dasyatidae, Scaridae)
select_biomass <- select_biomass[,-1]
# update colnames
colnames(select_abundance) <- paste(colnames(select_abundance), "Abundance", sep="_")
colnames(select_density) <- paste(colnames(select_density), "Density", sep="_")
colnames(select_size) <- paste(colnames(select_size), "MeanSize", sep="_")
colnames(select_biomass) <- paste(colnames(select_biomass), "Biomass", sep="_")
# add column Site_ID
select_abundance$Site_ID <- Fish_family_abund_site$Site_ID
select_density$Site_ID <- Fish_family_abund_site$Site_ID
select_size$Site_ID <- Fish_family_size_site_spread$Site_ID
select_biomass$Site_ID <- Fish_family_biomass_site$Site_ID
# Join together
select_families <- full_join(select_abundance, select_density)
select_families <- full_join(select_families, select_size)
select_families <- full_join(select_families, select_biomass)
View(select_families)
# save data
save(select_families, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Selected_families_data.rdata")
# Sum of abundance of each trophic group per site
Fish_trophic_abund_site <- Fish %>%
select(Site_ID, trophic_group, Number)%>%
group_by(Site_ID, trophic_group) %>%
summarise_all(funs(sum))
save(Fish_trophic_abund_site, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Trophic_abundance.rdata")
# Transpose dataframe to have site in lines and trophic groups in columns
Fish_trophic_abund_site <- spread(data=Fish_trophic_abund_site, key="trophic_group", value="Number", fill = 0)
# compute densities
Fish_trophic_density_site <- Fish_trophic_abund_site[,-1]/300
colnames(Fish_trophic_density_site) <- paste(colnames(Fish_trophic_density_site), "Density", sep="_")
Fish_trophic_density_site$Site_ID <- Fish_trophic_abund_site$Site_ID
# update colnames of abundance dataframe
Fish_trophic_abund_site <- Fish_trophic_abund_site[,-1]
colnames(Fish_trophic_abund_site) <- paste(colnames(Fish_trophic_abund_site), "Abundance", sep="_")
# Sum of biomass of each trophic group per site
Fish_trophic_biomass_site <- Fish %>%
select(Site_ID, trophic_group, Biomass)%>%
filter(!is.na(Biomass))%>%
group_by(Site_ID, trophic_group) %>%
summarise_all(funs(sum))
save(Fish_trophic_biomass_site, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Trophic_biomass.rdata")
# Transpose dataframe to have site in lines and trophic groups in columns
Fish_trophic_biomass_site <- spread(data=Fish_trophic_biomass_site, key="trophic_group", value="Biomass", fill = 0)
# update colnames of abundance dataframe
Fish_trophic_biomass_site <- Fish_trophic_biomass_site[,-1]
colnames(Fish_trophic_biomass_site) <- paste(colnames(Fish_trophic_biomass_site), "Biomass", sep="_")
Fish_trophic_site <- cbind(Fish_trophic_density_site,Fish_trophic_abund_site, Fish_trophic_biomass_site)
View(Fish_trophic_site)
View(Fish)
# Load fish file
Fish <- read.csv("c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/2 - Raw_data/2 - CSV/GCRMN_Fish.csv", sep=";", na.strings = "")
# remove empty rows
Fish <- Fish %>%
filter(!is.na(Year))
# Update 2017 to 2017_pre and 2017_post
for (i in 1:nrow(Fish)) {
if(Fish[i,"Year"]=="2017" & Fish[i,"Month"]=="August"){
Fish[i,"Year"] <- "2017_pre"
}
if(Fish[i,"Year"]=="2017" & Fish[i,"Month"]%in%c("November","December")){
Fish[i,"Year"] <- "2017_post"
}
}
# Correct Site names
for (i in 1:nrow(Fish)) {
if(Fish[i,"Site"]=="Mike's Maze"){
Fish[i,"Site"] <- "Mikes Mazes"
}
if(Fish[i,"Site"]=="Proselyte"){
Fish[i,"Site"] <- "Proselyte Reef"
}
if(Fish[i,"Site"]=="Long Bay"){
Fish[i,"Site"] <- "Long Bay Reef"
}
if(Fish[i,"Site"]=="Fishbowl"){
Fish[i,"Site"] <- "Fish Bowl"
}
}
# Create unique ID per site
Fish$Site_ID <- paste0(Fish$Year, "-", Fish$Site)
# Fish observer
Fish_obs <- Fish %>%
distinct(Site_ID, Observer)
save(Fish_obs, file = "c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Fish_observer.rdata")
# Correct fish species names
Fish$SpeciesSN <- gsub("Chromis cyanea", "Azurina cyanea", Fish$SpeciesSN)
Fish$SpeciesSN <- gsub("Chromis multilineata", "Azurina multilineata", Fish$SpeciesSN)
Fish$SpeciesSN <- gsub("Carangoides ruber", "Caranx ruber", Fish$SpeciesSN)
Fish$SpeciesSN <- gsub("Carangoides bartholomaei", "Caranx bartholomaei", Fish$SpeciesSN)
Fish$SpeciesSN <- gsub("Dasyatis americana", "Hypanus americanus", Fish$SpeciesSN)
Fish$SpeciesSN <- gsub("Acanthostracion polygonius", "Acanthostracion polygonium", Fish$SpeciesSN)
Fish$SpeciesSN <- gsub("Carcharhinus perezi", "Carcharhinus perezii", Fish$SpeciesSN)
Fish$SpeciesSN <- gsub("Kyphosus sectator", "Kyphosus sectatrix", Fish$SpeciesSN)
# Add Family name
taxo <- load_taxa()
Fish <- left_join(Fish, taxo[,c("Species", "Family")], join_by("SpeciesSN" == "Species"))
Fish <- Fish %>%
filter(!is.na(Family))
# Add trophic group
Fish <- Fish %>%
mutate(trophic_group = case_when(
Family%in%c("Acanthuridae","Scaridae","Pomacentridae","Ostraciidae") ~ "Herbivorous",
Family%in%c("Labridae","Serranidae","Tetraodontidae","Pomacanthidae","Scorpaenidae","Kyphosidae","Ginglymostomatidae") ~ "Omnivorous",
Family%in%c("Lutjanidae","Epinephelidae","Carcharhinidae","Carangidae","Sphyraenidae","Synodontidae") ~ "Piscivorous",
Family%in%c("Dasyatidae","Chaetodontidae","Haemulidae","Grammatidae","Holocentridae","Balistidae","Monacanthidae","Sparidae","Sciaenidae","Mullidae","Gobiidae","Malacanthidae","Opistognathidae","Aulostomidae","Muraenidae","Diodontidae","Gerreidae") ~ "Invertivorous",
))
Fish <- Fish %>%
select(-c(TP_NO,TP_SIZE))
########################################################################################
### List of fish species and taxo
Fish_list <- Fish %>%
select(SpeciesSN, Family)%>%
left_join(., taxo[,c("Species","Genus", "Order", "Class")], join_by("SpeciesSN" == "Species"))
Fish_list <- Fish_list%>%
select(Class,Order,Family,Genus,SpeciesSN)%>%
distinct(SpeciesSN, .keep_all=T)
save(Fish_list, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Fish_list.rdata")
########################################################################################
### Compute fish biomass
load("c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/species_LW.rdata")
Fish <- left_join(Fish, species_LW[,c("Species","a","b")], join_by("SpeciesSN" == "Species"))
Fish[,c("Size_cm","a","b")] <- as.numeric(unlist(Fish[,c("Size_cm","a","b")]))
Fish$Biomass <- (Fish$a*(Fish$Size_cm^Fish$b))*Fish$Number
Fish$Biomass <- Fish$Biomass/1000
Fish <- Fish %>%
select(-c(a,b))
#########################################################################################
#### Fish species matrix abundance + abundance/richness/density per site ####
# Sum of abundance of each species per site
Fish_species_abund_site <- Fish %>%
select(Site_ID, SpeciesSN, Number)%>%
group_by(Site_ID, SpeciesSN) %>%
summarise_all(funs(sum))
# Transpose dataframe to have sites in lines and species in columns
Fish_species_abund_site <- spread(data=Fish_species_abund_site, key="SpeciesSN", value="Number", fill = 0)
# Compute total fish abundance per site
Fish_species_abund_site$Fish_abundance <- rowSums(Fish_species_abund_site[,c(2:ncol(Fish_species_abund_site))])
# Compute total fish species richness per site
Fish_species_abund_site$Fish_richness <- rowSums(Fish_species_abund_site[,c(2:ncol(Fish_species_abund_site)-1)] != 0)
# Compute fish density per site (area per site = 300m2)
Fish_species_abund_site$Fish_density <- Fish_species_abund_site$Fish_abundance/300
# Add columns Year, Site
Fish_species_abund_site <- Fish_species_abund_site %>%
left_join(., Fish[,c("Site_ID", "Year", "Site")]) %>%
distinct(Site_ID, .keep_all=T)
# Save Rdata
save(Fish_species_abund_site, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Fish_species_abund_site.rdata")
#########################################################################################
#### Fish species biomass matrix per site ####
# Sum of biomass of each species per site
Fish_species_biomass_site <- Fish %>%
select(Site_ID, SpeciesSN, Biomass)%>%
filter(!is.na(Biomass))%>%
group_by(Site_ID, SpeciesSN) %>%
summarise_all(funs(sum))
# Transpose dataframe to have sites in lines and species in columns
Fish_species_biomass_site <- spread(data=Fish_species_biomass_site, key="SpeciesSN", value="Biomass", fill = 0)
# Compute total fish biomass per site
Fish_species_biomass_site$Fish_biomass <- rowSums(Fish_species_biomass_site[,c(2:ncol(Fish_species_biomass_site))])
# Save Rdata
save(Fish_species_biomass_site, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Fish_species_biomass_site.rdata")
#########################################################################################
#### Fish family abundance matrix per site ####
# Sum of abundance of each family per site
Fish_family_abund_site <- Fish %>%
select(Site_ID, Family, Number)%>%
group_by(Site_ID, Family) %>%
summarise_all(funs(sum))
save(Fish_family_abund_site, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Family_abundance.rdata")
# Transpose dataframe to have site in lines and families in columns
Fish_family_abund_site <- spread(data=Fish_family_abund_site, key="Family", value="Number", fill = 0)
# compute family richness per site
Fish_family_abund_site$Family_richness <- rowSums(Fish_family_abund_site[,c(2:ncol(Fish_family_abund_site))] != 0)
# Add columns Year, Site
Fish_family_abund_site <- Fish_family_abund_site %>%
left_join(., Fish[,c("Site_ID", "Year", "Site")]) %>%
distinct(Site_ID, .keep_all=T)
# Save Rdata
save(Fish_family_abund_site, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Fish_family_abund_site.rdata")
#########################################################################################
#### Fish family biomass matrix per site ####
# Sum of biomass of each family per site
Fish_family_biomass_site <- Fish %>%
select(Site_ID, Family, Biomass)%>%
filter(!is.na(Biomass))%>%
group_by(Site_ID, Family) %>%
summarise_all(funs(sum))
save(Fish_family_biomass_site, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Family_biomass.rdata")
# Transpose dataframe to have site in lines and families in columns
Fish_family_biomass_site <- spread(data=Fish_family_biomass_site, key="Family", value="Biomass", fill = 0)
# Add columns Year, Site
Fish_family_biomass_site <- Fish_family_biomass_site %>%
left_join(., Fish[,c("Site_ID", "Year", "Site")]) %>%
distinct(Site_ID, .keep_all=T)
# Save Rdata
save(Fish_family_biomass_site, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Fish_family_biomass_site.rdata")
#########################################################################################
#### Fish mean individual size per family per site ####
Fish$Size_cm <- gsub(">", "", Fish$Size_cm )
Fish$Size_cm <- as.numeric(Fish$Size_cm)
# Compute mean fish size per family and site
Fish_family_size_sites_mean <- Fish %>%
select(Site_ID, Family, Size_cm)%>%
group_by(Site_ID, Family) %>%
summarise_all(funs(mean))
# compute SD fish size per family and site
Fish_family_size_sites_sd <- Fish %>%
select(Site_ID, Family, Size_cm)%>%
group_by(Site_ID, Family) %>%
summarise_all(funs(sd))
# assemble both
Fish_family_size_site <- cbind(Fish_family_size_sites_mean, Fish_family_size_sites_sd$Size_cm)
colnames(Fish_family_size_site) <- c("Site_ID", "Family", "Mean_size", "SD_size")
# add year and site
Fish_family_size_site <- left_join(Fish_family_size_site, Fish_family_abund_site[,c("Year", "Site", "Site_ID")])
# Save Rdata
save(Fish_family_size_site, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Fish_family_size_site.rdata")
# spread table
Fish_family_size_site_spread <- Fish_family_size_site %>%
select(Site_ID, Family, Mean_size)
Fish_family_size_site_spread <- spread(data=Fish_family_size_site_spread, key="Family", value="Mean_size", fill = 0)
# Save Rdata
save(Fish_family_size_site_spread, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Fish_family_size_site_spread.rdata")
########################################################################################
#### Select important family data ####
# select important families abundance
select_abundance <- Fish_family_abund_site %>%
select(Acanthuridae, Labridae, Lutjanidae, Serranidae, Epinephelidae, Carcharhinidae, Dasyatidae, Scaridae)
select_abundance <- select_abundance[,-1]
# compute important families density
select_density <- select_abundance / 300
# select important families size
select_size <- Fish_family_size_site_spread %>%
select(Acanthuridae, Labridae, Lutjanidae, Serranidae, Epinephelidae, Carcharhinidae, Dasyatidae, Scaridae)
select_size <- select_size[,-1]
# select important families biomass
select_biomass <- Fish_family_biomass_site %>%
select(Acanthuridae, Labridae, Lutjanidae, Serranidae, Epinephelidae, Carcharhinidae, Dasyatidae, Scaridae)
select_biomass <- select_biomass[,-1]
# update colnames
colnames(select_abundance) <- paste(colnames(select_abundance), "Abundance", sep="_")
colnames(select_density) <- paste(colnames(select_density), "Density", sep="_")
colnames(select_size) <- paste(colnames(select_size), "MeanSize", sep="_")
colnames(select_biomass) <- paste(colnames(select_biomass), "Biomass", sep="_")
# add column Site_ID
select_abundance$Site_ID <- Fish_family_abund_site$Site_ID
select_density$Site_ID <- Fish_family_abund_site$Site_ID
select_size$Site_ID <- Fish_family_size_site_spread$Site_ID
select_biomass$Site_ID <- Fish_family_biomass_site$Site_ID
# Join together
select_families <- full_join(select_abundance, select_density)
select_families <- full_join(select_families, select_size)
select_families <- full_join(select_families, select_biomass)
# save data
save(select_families, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Selected_families_data.rdata")
#########################################################################################
#### Abundance, density and biomass of Trophic group per site ####
# Sum of abundance of each trophic group per site
Fish_trophic_abund_site <- Fish %>%
select(Site_ID, trophic_group, Number)%>%
group_by(Site_ID, trophic_group) %>%
summarise_all(funs(sum))
save(Fish_trophic_abund_site, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Trophic_abundance.rdata")
# Transpose dataframe to have site in lines and trophic groups in columns
Fish_trophic_abund_site <- spread(data=Fish_trophic_abund_site, key="trophic_group", value="Number", fill = 0)
# compute densities
Fish_trophic_density_site <- Fish_trophic_abund_site[,-1]/300
colnames(Fish_trophic_density_site) <- paste(colnames(Fish_trophic_density_site), "Density", sep="_")
Fish_trophic_density_site$Site_ID <- Fish_trophic_abund_site$Site_ID
# update colnames of abundance dataframe
Fish_trophic_abund_site <- Fish_trophic_abund_site[,-1]
colnames(Fish_trophic_abund_site) <- paste(colnames(Fish_trophic_abund_site), "Abundance", sep="_")
# Sum of biomass of each trophic group per site
Fish_trophic_biomass_site <- Fish %>%
select(Site_ID, trophic_group, Biomass)%>%
filter(!is.na(Biomass))%>%
group_by(Site_ID, trophic_group) %>%
summarise_all(funs(sum))
save(Fish_trophic_biomass_site, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Trophic_biomass.rdata")
# Transpose dataframe to have site in lines and trophic groups in columns
Fish_trophic_biomass_site <- spread(data=Fish_trophic_biomass_site, key="trophic_group", value="Biomass", fill = 0)
# update colnames of abundance dataframe
Fish_trophic_biomass_site <- Fish_trophic_biomass_site[,-1]
colnames(Fish_trophic_biomass_site) <- paste(colnames(Fish_trophic_biomass_site), "Biomass", sep="_")
Fish_trophic_site <- cbind(Fish_trophic_density_site,Fish_trophic_abund_site, Fish_trophic_biomass_site)
View(Fish_trophic_site)
# Save Rdata
save(Fish_trophic_site, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Fish_trophic_site.rdata")
Invert_abund <- read.csv("c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/2 - Raw_data/2 - CSV/GCRMN_Macro-invert.csv", sep=";")
# Update 2017 to 2017_pre and 2017_post
for (i in 1:nrow(Invert_abund)) {
if(Invert_abund[i,"Year"]=="2017" & Invert_abund[i,"Month"]=="August"){
Invert_abund[i,"Year"] <- "2017_pre"
}
if(Invert_abund[i,"Year"]=="2017" & Invert_abund[i,"Month"]%in%c("November","December")){
Invert_abund[i,"Year"] <- "2017_post"
}
}
# add Site_ID
Invert_abund$Site_ID <- paste0(Invert_abund$Year, "-", Invert_abund$Site)
Invert_abund <- Invert_abund %>%
filter(Site_ID!="NA-")
Invert_abund_site <- data.frame(matrix(ncol = 13, nrow = 0))
names(Invert_abund_site) <- c("Year", "Site", "Site_ID", "LongspineSeaUrchin_Abundance", "LongspineSeaUrchin_Density", "OtherSeaUrchin_Abundance", "OtherSeaUrchin_Density", "SeaCucumbers_Abundance", "SeaCucumbers_Density", "Lobster_Abundance", "Lobster_Density", "Conch_Abundance", "Conch_Density")
Sites <- unique(Invert_abund$Site_ID)
for (i in 1:length(Sites)) {
df <- Invert_abund %>%
filter(Site_ID==Sites[[i]])
Invert_abund_site[i,"Year"] <- unique(df$Year)
Invert_abund_site[i,"Site"] <- unique(df$Site)
Invert_abund_site[i,"Site_ID"] <- unique(df$Site_ID)
Invert_abund_site[i,"LongspineSeaUrchin_Abundance"] <- sum(df[,"Longspine.Sea.Urchin..n."])
Invert_abund_site[i,"LongspineSeaUrchin_Density"] <- Invert_abund_site[i,"LongspineSeaUrchin_Abundance"]/40.5
Invert_abund_site[i,"OtherSeaUrchin_Abundance"] <- sum(df[,"Other.Sea.Urchin..n."])
Invert_abund_site[i,"OtherSeaUrchin_Density"] <- Invert_abund_site[i,"OtherSeaUrchin_Abundance"]/40.5
Invert_abund_site[i,"SeaCucumbers_Abundance"] <- sum(df[,"Sea.Cucumbers..n."])
Invert_abund_site[i,"SeaCucumbers_Density"] <- Invert_abund_site[i,"SeaCucumbers_Abundance"]/40.5
Invert_abund_site[i,"Lobster_Abundance"] <- sum(df[,"Lobster..n."])
Invert_abund_site[i,"Lobster_Density"] <- Invert_abund_site[i,"Lobster_Abundance"]/40.5
Invert_abund_site[i,"Conch_Abundance"] <- sum(df[,"Conch..n."])
Invert_abund_site[i,"Conch_Density"] <- Invert_abund_site[i,"Conch_Abundance"]/40.5
}
View(Invert_abund_site)
save(Invert_abund_site, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Invert_abund_density_site.rdata")
View(Invert_abund_site)
Algae <- read.csv("c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/2 - Raw_data/2 - CSV/GCRMN_Algae.csv", sep=";")
for (i in 1:nrow(Algae)) {
if(Algae[i,"Year"]=="2017" & Algae[i,"Month"]=="August"){
Algae[i,"Year"] <- "2017_pre"
}
if(Algae[i,"Year"]=="2017" & Algae[i,"Month"]%in%c("November","December")){
Algae[i,"Year"] <- "2017_post"
}
}
# Create unique ID per site
Algae$Site_ID <- paste0(Algae$Year, "-", Algae$Site)
Algae$Macro.Height..cm. <- as.numeric(Algae$Macro.Height..cm.)
# Compute mean algae size per site
Algae_size_sites_mean <- Algae %>%
select(Site_ID, Macro.Height..cm.)%>%
group_by(Site_ID) %>%
summarise_all(funs(mean))
colnames(Algae_size_sites_mean) <- c("Site_ID", "MacroAlgae_MeanHeight")
Algae_size_sites_sd <- Algae %>%
select(Site_ID, Macro.Height..cm.)%>%
group_by(Site_ID) %>%
summarise_all(funs(sd))
colnames(Algae_size_sites_sd) <- c("Site_ID", "MacroAlgae_sdHeight")
# Compute mean turf size per site
Turf_size_sites_mean <- Algae %>%
select(Site_ID, Turf.Height..mm.)%>%
group_by(Site_ID) %>%
summarise_all(funs(mean))
colnames(Turf_size_sites_mean) <- c("Site_ID", "Turf_MeanHeight")
Turf_size_sites_sd <- Algae %>%
select(Site_ID, Turf.Height..mm.)%>%
group_by(Site_ID) %>%
summarise_all(funs(sd))
colnames(Turf_size_sites_sd) <- c("Site_ID", "Turf_sdHeight")
Algae_size_site <- left_join(Algae_size_sites_mean, Algae_size_sites_sd)
Algae_size_site <- left_join(Algae_size_site, Turf_size_sites_mean)
Algae_size_site <- left_join(Algae_size_site, Turf_size_sites_sd)
View(Algae_size_site)
# save data
save(Algae_size_site, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Algae_size_site.rdata")
Recruits <- read.csv("c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/2 - Raw_data/2 - CSV/GCRMN_Recruits.csv", sep=";")
for (i in 1:nrow(Recruits)) {
if(Recruits[i,"Year"]=="2017" & Recruits[i,"Month"]=="August"){
Recruits[i,"Year"] <- "2017_pre"
}
if(Recruits[i,"Year"]=="2017" & Recruits[i,"Month"]%in%c("November","December")){
Recruits[i,"Year"] <- "2017_post"
}
}
# Create unique ID per site
Recruits$Site_ID <- paste0(Recruits$Year, "-", Recruits$Site)
Recruits <- Recruits %>%
filter(Site_ID!="NA-")
View(Recruits)
# add a column to compute total recruit number per site
Recruits$Number <- 1
# Recruit genus abundance
Recruit_abund <- Recruits %>%
select(Site_ID, GenusSN, Number)
View(Recruit_abund)
# Transpose dataframe to have sites in lines and genus in columns
Recruits_abund_site <- spread(data=Recruits_abund_site, key="GenusSN", value="Number", fill = 0)
# Sum of abundance of each species per transect
Recruits_abund_site <- Recruits %>%
select(Site_ID, GenusSN, Number)%>%
group_by(Site_ID, GenusSN) %>%
summarise_all(funs(sum))
save(Recruits_abund_site, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Recruit_abund.rdata")
# Transpose dataframe to have sites in lines and genus in columns
Recruits_abund_site <- spread(data=Recruits_abund_site, key="GenusSN", value="Number", fill = 0)
Recruits_abund_site <- Recruits_abund_site[,-c(2,3)]
# Compute recruit abundance per site
Recruits_abund_site$Recruits_abundance <- rowSums(Recruits_abund_site[,c(2:ncol(Recruits_abund_site))])
View(Recruits_abund_site)
# Compute recruit density per site (area per site = 0.9375m2)
Recruits_abund_site$Recruits_density <- Recruits_abund_site$Recruits_abundance/0.9375
# Compute mean recruit size per site
Recruit_size_sites_mean <- Recruits %>%
select(Site_ID, Size_cm)%>%
group_by(Site_ID) %>%
summarise_all(funs(mean))
colnames(Recruit_size_sites_mean) <- c("Site_ID", "Recruits_MeanSize")
# compute SD fish size per family and site
Recruit_size_sites_sd <- Recruits %>%
select(Site_ID,Size_cm)%>%
group_by(Site_ID) %>%
summarise_all(funs(sd))
colnames(Recruit_size_sites_sd) <- c("Site_ID", "Recruits_sdSize")
Recruits_abund_site <- left_join(Recruits_abund_site, Recruit_size_sites_mean)
Recruits_abund_site <- left_join(Recruits_abund_site, Recruit_size_sites_sd)
# save data
save(Recruits_abund_site, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Recruits_abund_site.rdata")
# load fish data
load("c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Fish_species_abund_site.rdata")
load("c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Fish_species_biomass_site.rdata")
load("c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Fish_family_abund_site.rdata")
load("c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Fish_family_size_site_spread.rdata")
load("c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Selected_families_data.rdata")
load("c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Fish_trophic_site.rdata")
# assemble fish data
Site_biodiv <- Fish_species_abund_site %>%
select(Year, Site, Site_ID, Fish_abundance, Fish_richness, Fish_density)
View(Site_biodiv)
View(Fish_species_biomass_site)
Site_biodiv <- full_join(Site_biodiv, Fish_species_biomass_site[,c("Site_ID", "Fish_Biomass")])
Site_biodiv <- full_join(Site_biodiv, Fish_species_biomass_site[,c("Site_ID", "Fish_biomass")])
Site_biodiv <- full_join(Site_biodiv, Fish_family_abund_site[,c("Site_ID", "Family_richness")])
Site_biodiv <- full_join(Site_biodiv, select_families)
Site_biodiv <- full_join(Site_biodiv, Fish_trophic_site)
load("c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Invert_abund_density_site.rdata")
View(Invert_abund_site)
Site_biodiv <- full_join(Site_biodiv, Invert_abund_site[,-c(1,2)])
load("c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Algae_size_site.rdata")
View(Algae_size_site)
Site_biodiv <- full_join(Site_biodiv, Algae_size_site)
load("c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Recruits_abund_site.rdata")
View(Recruits_abund_site)
Site_biodiv <- full_join(Site_biodiv, Recruits_abund_site[,c(1,15:18)])
#### save data ####
save(Site_biodiv, file="c://Users/mathonlocal/Desktop/CORENA Project/Reef_Monitoring/Data/3 - Clean_data/Site_biodiversity_metrics.rdata")
